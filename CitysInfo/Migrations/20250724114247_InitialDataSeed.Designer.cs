// <auto-generated />
using CitysInfo.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CitysInfo.Migrations
{
    [DbContext(typeof(CityInfoContext))]
    [Migration("20250724114247_InitialDataSeed")]
    partial class InitialDataSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("CitysInfo.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The one with that big park. ",
                            Name = "New York City"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The one with the cathedral that was never really finished. ",
                            Name = "Antwerp"
                        },
                        new
                        {
                            Id = 3,
                            Description = "the onw with that big tower. ",
                            Name = "Paris"
                        });
                });

            modelBuilder.Entity("CitysInfo.Entities.PointsOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("cityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("cityId");

                    b.ToTable("PointsOfInterest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Discription = "the most visited unbrun park in the united states.",
                            Name = "Central Park",
                            cityId = 1
                        },
                        new
                        {
                            Id = 2,
                            Discription = "A 102-story skycraper located in midtown manhattan.",
                            Name = "Empire State building",
                            cityId = 1
                        },
                        new
                        {
                            Id = 3,
                            Discription = "A gothic style cathdral, concevied by architects.",
                            Name = "cathdral",
                            cityId = 2
                        },
                        new
                        {
                            Id = 4,
                            Discription = "most beautiful and highest tower in world.",
                            Name = "efil tower",
                            cityId = 3
                        });
                });

            modelBuilder.Entity("CitysInfo.Models.PointofInterestDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointofInterestDto");
                });

            modelBuilder.Entity("CitysInfo.Entities.PointsOfInterest", b =>
                {
                    b.HasOne("CitysInfo.Entities.City", "city")
                        .WithMany()
                        .HasForeignKey("cityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("city");
                });

            modelBuilder.Entity("CitysInfo.Models.PointofInterestDto", b =>
                {
                    b.HasOne("CitysInfo.Entities.City", null)
                        .WithMany("PointOfInterests")
                        .HasForeignKey("CityId");
                });

            modelBuilder.Entity("CitysInfo.Entities.City", b =>
                {
                    b.Navigation("PointOfInterests");
                });
#pragma warning restore 612, 618
        }
    }
}
